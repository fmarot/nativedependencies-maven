<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.teamtter.mavennatives</groupId>
	<artifactId>nativedependencies-maven-plugin</artifactId>
	<packaging>maven-plugin</packaging>
	<version>1.0.9-SNAPSHOT</version>

	<name>${project.groupId}:${project.artifactId}</name>
	<description>This plugin allows the automatic unpacking of natives in jars depending on a classifier with a certain pattern.
	It is a fork from http://code.google.com/p/mavennatives/ . Thanks to the original authors ruben.garat@gemserk.com and ariel.coppes@gemserk.com !</description>
	<url>https://github.com/fmarot/mavennatives</url>

	<properties>
		<skipTests>false</skipTests>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.version>3.8.1</maven.version>

		<java.source.target.version>11</java.source.target.version>

		<compiler.plugin.version>3.8.1</compiler.plugin.version>
		<resources.plugin.version>3.2.0</resources.plugin.version>
		<plugin.plugin.version>3.6.1</plugin.plugin.version>
		<plexus.component.metadata.version>2.1.0</plexus.component.metadata.version>
		<source.plugin.version>3.2.1</source.plugin.version>
		<javadoc.plugin.version>3.0.0</javadoc.plugin.version>
		<invoker.plugin.version>3.2.2</invoker.plugin.version>

		<slf4j.version>1.7.31</slf4j.version>
		<commons.compress.version>1.26.0</commons.compress.version>
		<tukaani.xz.version>1.9</tukaani.xz.version>
		<jackson.version>2.13.0-rc1</jackson.version>
	</properties>


	<licenses>
		<license>
			<name>Apache License 2</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Francois MAROT</name>
			<email>myFirstName.myLastName@gmail.com</email>
			<organization>Home</organization>
			<organizationUrl>http://careers.stackoverflow.com/francoismarot</organizationUrl>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:git@github.com:fmarot/mavennatives.git</connection>
		<developerConnection>scm:git:git@github.com:fmarot/mavennatives.git</developerConnection>
		<url>git@github.com:fmarot/mavennatives.git</url>
		<tag>HEAD</tag>
	</scm>

	<distributionManagement>
		<!-- at work... -->
		<repository>
			<id>archiva.internal</id>
			<name>Internal Release Repository</name>
			<url>https://archiva.olea-medical.local/repository/internal/</url>
		</repository>
		<snapshotRepository>
			<id>archiva.snapshots</id>
			<name>Internal Snapshot Repository</name>
			<url>https://archiva.olea-medical.local/repository/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compiler.plugin.version}</version>
				<configuration>
					<source>${java.source.target.version}</source>
					<target>${java.source.target.version}</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${resources.plugin.version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-plugin-plugin</artifactId>
				<version>${plugin.plugin.version}</version>
				<executions>
					<execution>
						<?m2e ignore?>
						<id>default-descriptor</id>
						<phase>process-classes</phase>
					</execution>
					<execution>
						<?m2e ignore?>
						<!-- if you want to generate help goal -->
						<id>help-goal</id>
						<goals>
							<goal>helpmojo</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.plexus</groupId>
				<artifactId>plexus-component-metadata</artifactId>
				<version>${plexus.component.metadata.version}</version>
				<executions>
					<execution>
						<id>process-classes</id>
						<goals>
							<goal>generate-metadata</goal>
						</goals>
					</execution>
					<execution>
						<id>process-test-classes</id>
						<goals>
							<goal>generate-test-metadata</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<!-- used to generate & deploy sources -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${source.plugin.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.3</version>
					<configuration><!-- <mavenExecutorId>forked-path</mavenExecutorId> <useReleaseProfile>false</useReleaseProfile> 
							<arguments>-Pgpgsign,mavennativesgpg</arguments> -->
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<!-- To deploy on central just run "mvn clean deploy -P gpgsign" -->
		<!-- Then go to https://oss.sonatype.org/#stagingRepositories and select 
			"close" then "release" -->
		<profile>
			<id>gpgsign</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<!-- used to generate & deploy javadoc -->
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>${javadoc.plugin.version}</version>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>

			<!-- To deploy to Maven Central, if you are using the Maven deploy plugin, 
				which is the default behavior, we need this "distributionManagement" section. -->
			<distributionManagement>
				<snapshotRepository>
					<id>ossrh</id>
					<url>https://oss.sonatype.org/content/repositories/snapshots</url>
				</snapshotRepository>
				<repository>
					<id>ossrh</id>
					<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
				</repository>
			</distributionManagement>
		</profile>

		<profile>
			<id>run-its</id> <!-- run Integration Tests -->
			<activation>
				<property>
					<name>maven.test.skip</name>
					<value>!true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-invoker-plugin</artifactId>
						<version>${invoker.plugin.version}</version>
						<configuration>
							<skipInvocation>${skipTests}</skipInvocation>
							<cloneAllFiles>true</cloneAllFiles>
							<cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>
							<debug>true</debug>
							<postBuildHookScript>validate.groovy</postBuildHookScript>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>install</goal>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencies>

		<!-- Required to unzip/untar & all -->

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-compress</artifactId>
			<version>${commons.compress.version}</version>
		</dependency>
		<dependency>
			<groupId>org.tukaani</groupId>
			<artifactId>xz</artifactId>
			<version>${tukaani.xz.version}</version>
		</dependency>

		<!-- read/write JSON -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<!-- Maven plugin specific -->

		<dependency>
			<groupId>org.apache.maven.plugin-tools</groupId>
			<artifactId>maven-plugin-annotations</artifactId>
			<version>3.6.1</version>
			<scope>provided</scope> <!-- It comes from maven itself -->
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<version>${maven.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-core</artifactId>
			<version>${maven.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-model</artifactId>
			<version>${maven.version}</version>
		</dependency>
		<dependency>
			<!-- gives access to "BuildContext" -->
			<groupId>org.sonatype.plexus</groupId>
			<artifactId>plexus-build-api</artifactId>
			<version>0.0.7</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.11.0</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.plexus</groupId>
			<artifactId>plexus-component-annotations</artifactId>
			<version>2.1.0</version>
		</dependency>

		<!-- Misc -->

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>${slf4j.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.20</version>
		</dependency>

		<!-- Test libs -->

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock-junit4</artifactId>
			<version>2.12.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock-legacy</artifactId>
			<version>2.12.0</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

</project>
